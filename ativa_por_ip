#!/bin/bash

executa() {
	# Tenta enviar a flag S nas portas 13, 37, 30000 e 3000
	for port in 13 37 30000 3000; do
		hping3 -S -p "$port" -c 1 "$1" > /dev/null 2>&1
	done

	# Define o nome do arquivo de saída
	output_file="arquivode_$1.txt"
	
	# Tenta fazer uma requisição HTTP na porta 1337 com timeout de 1 segundo
	response_code=$(curl -s -o "$output_file" -w "%{http_code}" --max-time 1 "http://$1:1337")
	
	# Verifica se o código de resposta HTTP é 200
	if [ "$response_code" == "200" ]; then
		printf "\n  >>Resposta HTTP detectada. Arquivo salvo em arquivode_%s.txt" "$1"
	else
	    # Remove o arquivo se a resposta não for 200
	    rm "$output_file" > /dev/null 2>&1
	fi
}

#Verifica os parametros
ips=()
for parametro in "$@"; do
    # Verifica se o parâmetro é um IP válido
    if [[ "$parametro" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        # Adiciona o IP à array
        ips+=("$parametro")
    else
        echo "Parâmetro inválido: $parametro"
    fi
done

# Para cada ip de parametro, extrai o IP e testa toda a faixa
for rota in "${ips[@]}"; do
	# Extrai o prefixo da rota (primeiro endereço IP do intervalo)
	IP_PREFIX=$(echo "$rota" | cut -d'.' -f1-3)
	printf "\nTestando a faixa de IPs: %s.1/24\n" "$IP_PREFIX"
	
	# Loop através do IP com mesmo prefixo da rota
	for i in {1..255}; do
		IP="$IP_PREFIX.$i"
		#printf "\nTestando o IP: %s" "$IP"
		executa "$IP" &
	done
	# Aguarda todos os processos em segundo plano terminarem
	wait
done
